{"version":3,"file":"calendar.d.ts","sources":["calendar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { DateType } from '../../../core/util/datetime';\nimport { MbscCalendarNavService } from '../../shared/calendar-nav/calendar-nav';\nimport { MbscCalendarDayData } from '../../shared/calendar-view/calendar-day';\nimport { CalendarViewBase } from '../../shared/calendar-view/calendar-view';\nimport { ICalendarProps, ViewType } from '../../shared/calendar-view/calendar-view.types';\nimport { InstanceServiceBase } from '../../shared/instance-service';\nimport { PickerBase } from '../../shared/picker/picker';\nimport { IPickerProps, IPickerState } from '../../shared/picker/picker.types';\n/**\n * Calendar options\n * @interface MbscCalendarOptions\n */\nexport interface MbscCalendarOptions extends IPickerProps, ICalendarProps {\n    active?: number;\n    calendarType?: 'year' | 'month' | 'week';\n    calendarScroll?: 'horizontal' | 'vertical';\n    pages?: number | 'auto';\n    refDate?: DateType;\n    selectMax?: number;\n    selectMin?: number;\n    selectMultiple?: boolean;\n    selectRange?: boolean;\n    showOuterDays?: boolean;\n    showWeekNumbers?: boolean;\n    selectView?: ViewType;\n    size?: number;\n    weeks?: number;\n    selectedText?: string;\n    selectedPluralText?: string;\n    /** @hidden */\n    calendarHeaderTemplate?: any;\n    dayTemplate?: any;\n    dayContentTemplate?: any;\n    renderDay?(args: MbscCalendarDayData): any;\n    renderDayContent?(args: MbscCalendarDayData): any;\n    renderCalendarHeader?(): any;\n    onActiveChange?(args: any, inst: any): void;\n    onCellClick?(args: any, inst: any): void;\n    onCellHoverIn?(args: any, inst: any): void;\n    onCellHoverOut?(args: any, inst: any): void;\n    onLabelClick?(args: any, inst: any): void;\n    onPageChange?(args: any, inst: any): void;\n    onPageLoaded?(args: any, inst: any): void;\n    onPageLoading?(args: any, inst: any): void;\n}\n/** @hidden */\nexport interface MbscCalendarState extends IPickerState {\n    activeTab?: string;\n    pages?: number;\n}\n/** @hidden */\nexport declare class CalendarBase extends PickerBase<MbscCalendarOptions, MbscCalendarState> {\n    /** @hidden */\n    static defaults: MbscCalendarOptions;\n    protected static _name: string;\n    /** @hidden */\n    _calendarView: CalendarViewBase;\n    /** @hidden */\n    _instanceService: InstanceServiceBase;\n    /** @hidden */\n    _navService: MbscCalendarNavService;\n    /** @hidden */\n    _onDayClick: (args: any) => void;\n    /** @hidden */\n    _onTodayClick: () => void;\n    /** @hidden */\n    _onActiveChange: (args: any) => void;\n    /** @hidden */\n    _valueEquals(v1: any, v2: any): boolean;\n    _shouldValidate(s: MbscCalendarOptions, prevS: MbscCalendarOptions): boolean;\n    _setCal: (cal: any) => void;\n    protected _render(s: MbscCalendarOptions, state: MbscCalendarState): void;\n    protected _copy(value: any): any;\n    protected _format(value: any): string;\n    protected _parse(value: any): {\n        [key: number]: Date;\n    };\n    protected _get(value: {\n        [key: number]: Date;\n    }): any[] | Date;\n}\n"]}